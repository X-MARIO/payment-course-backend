# docker-compose.prod.yml
version: '3.9'

services:
  backend:
    container_name: backend_prod
    build:
      context: .
      dockerfile: docker/backend/Dockerfile
      target: production # Используем оптимизированную production-стадию
    ports:
      - "4000:4000"
    env_file:
      - .env.prod
    networks:
      - app_network
    restart: always
    depends_on:
      postgres:
        condition: service_healthy # Ожидаем, пока БД не будет готова
    # Ограничение ресурсов для защиты хост-машины от перегрузок
    deploy:
      resources:
        limits:
          cpus: '0.50' # Ограничение в 50% одного ядра CPU
          memory: 512M # Ограничение в 512 MB RAM
    # Настройка ротации логов для предотвращения переполнения диска
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  postgres:
    container_name: postgres_prod
    build:
      context: .
      dockerfile: docker/postgres/Dockerfile
    # ВАЖНО: В production порт базы данных не должен быть открыт наружу
    env_file:
      - .env.prod
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app_network
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DATABASE"]
      interval: 10s
      timeout: 5s
      retries: 5