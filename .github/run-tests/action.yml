# .github/actions/run-tests/action.yml

name: 'Install Dependencies and Run Tests'
description: 'Installs dependencies, creates .env, and runs lint, unit, and e2e tests'

runs:
  using: "composite"
  steps:
    # Шаг 1: Устанавливаем зависимости.
    # Команда 'yarn install --immutable' гарантирует, что будут установлены именно те версии,
    # которые указаны в yarn.lock, и предотвращает его случайное изменение.
    - name: Install dependencies
      shell: bash
      run: yarn install --immutable

    # Шаг 2: Создаем .env файл для тестов.
    # В CI нет реального .env файла, поэтому мы создаем его налету
    # с тестовыми данными, чтобы приложение могло запуститься для e2e-тестов.
    - name: Create .env file for tests
      shell: bash
      run: |
        echo "HTTP_PORT=3000" >> .env
        echo "HTTP_HOST=http://localhost:3000" >> .env
        echo "POSTGRES_HOST=localhost" >> .env
        echo "POSTGRES_PORT=5432" >> .env
        echo "POSTGRES_USER=testuser" >> .env
        echo "POSTGRES_PASSWORD=testpassword" >> .env
        echo "POSTGRES_DATABASE=testdb" >> .env
        echo "NODE_ENV=test" >> .env

    # Шаг 3: Запускаем линтер.
    # Проверяем код на соответствие стандартам оформления (style guide).
    - name: Run linter
      shell: bash
      run: yarn lint

    # Шаг 4: Запускаем юнит-тесты.
    # Проверяем отдельные функции и модули приложения.
    - name: Run unit tests
      shell: bash
      run: yarn test

    # Шаг 5: Запускаем e2e (end-to-end) тесты.
    # Эти тесты проверяют работу всего приложения целиком, имитируя действия пользователя.
    - name: Run e2e tests
      shell: bash
      run: yarn test:e2e