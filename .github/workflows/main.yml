name: Main CI/CD

on:
  push:
    branches:
      - 'main'
    tags:
      - 'v*.*.*'
  workflow_dispatch:

jobs:
  # --- ЭТАП 1: ТЕСТИРОВАНИЕ ---
  tests:
    name: Build & Test
    uses: X-MARIO/shared-workflows/.github/workflows/reusable-node-tests.yml@main
    with:
      shared-workflows-version: ${{ vars.SHARED_WORKFLOWS_VERSION }}
    secrets: inherit

  # --- ЭТАП 2: СБОРКА ОБРАЗА ---
  build:
    name: Build & Push Docker Image
    needs: tests
    permissions:
      contents: read
      packages: write
      security-events: write
    uses: X-MARIO/shared-workflows/.github/workflows/reusable-docker-build.yml@main
    with:
      shared-workflows-version: ${{ vars.SHARED_WORKFLOWS_VERSION }}
    secrets: inherit

  # --- ЭТАП 3: ДЕПЛОЙ В DEV ---
  deploy-dev:
    name: Deploy to Development
    needs: build
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    uses: X-MARIO/shared-workflows/.github/workflows/reusable-deploy.yml@main
    with:
      environment-name: development
      environment-url: ${{ vars.DEV_URL }}
      image-tag: main
      compose-file: docker-compose.dev.yml
      shared-workflows-version: ${{ vars.SHARED_WORKFLOWS_VERSION }}
    secrets:
      remote_host: ${{ secrets.DEV_REMOTE_HOST }}
      remote_user: ${{ secrets.DEV_REMOTE_USER }}
      remote_key: ${{ secrets.DEV_REMOTE_KEY }}
      remote_path: ${{ secrets.DEV_REMOTE_PATH }}

  # --- ЭТАП 4: ДЕПЛОЙ В PROD ---
  deploy-prod:
    name: Deploy to Production
    needs: build
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    uses: X-MARIO/shared-workflows/.github/workflows/reusable-deploy.yml@main
    with:
      environment-name: production
      environment-url: ${{ vars.PROD_URL }}
      image-tag: ${{ github.ref_name }}
      compose-file: docker-compose.prod.yml
      shared-workflows-version: ${{ vars.SHARED_WORKFLOWS_VERSION }}
    secrets:
      remote_host: ${{ secrets.PROD_REMOTE_HOST }}
      remote_user: ${{ secrets.PROD_REMOTE_USER }}
      remote_key: ${{ secrets.PROD_REMOTE_KEY }}
      remote_path: ${{ secrets.PROD_REMOTE_PATH }}
