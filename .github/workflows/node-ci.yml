# .github/workflows/node-ci.yml

name: Node.js CI & Security Scan (PR)

on:
  pull_request:
    branches:
      - 'main'

jobs:
  # Первая задача: сборка и тестирование приложения.
  build-and-test:
    name: Build & Test
    runs-on: ubuntu-latest
    # Поднимаем сервис с базой данных PostgreSQL, который будет доступен для e2e-тестов.
    services:
      postgres:
        image: postgres:16-alpine
        env:
          POSTGRES_USER: testuser
          POSTGRES_PASSWORD: testpassword
          POSTGRES_DB: testdb
        ports:
          - 5432:5432 # Пробрасываем порт, чтобы приложение могло подключиться к БД.
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      # Шаг 1: Клонируем репозиторий, чтобы получить доступ к коду.
      - name: Checkout repository
        uses: actions/checkout@v4

      # Шаг 2: Вызываем наш первый переиспользуемый action для настройки окружения.
      - name: Setup Node.js Environment
        uses: ./.github/actions/setup-node

      # Шаг 3: Вызываем второй action для установки зависимостей и запуска тестов.
      - name: Install, Test, and Lint
        uses: ./.github/actions/run-tests

  # Вторая задача: сканирование кода на уязвимости с помощью CodeQL.
  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    permissions: # Выдаем необходимые права для работы CodeQL
      contents: read
      security-events: write
      actions: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Инициализируем CodeQL для анализа TypeScript кода.
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: typescript

      - name: Autobuild
        uses: github/codeql-action/autobuild@v3

      # Запускаем анализ и отправляем результаты в GitHub Security.
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3

      # Проверяем зависимости на наличие известных уязвимостей.
      - name: Dependency Review
        uses: actions/dependency-review-action@v4
        with:
          # Завершить CI с ошибкой, если найдена уязвимость критического уровня.
          fail-on-severity: critical