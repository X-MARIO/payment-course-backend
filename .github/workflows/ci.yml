# .github/workflows/ci.yml
name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      # 1. Получаем исходный код из репозитория
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. Устанавливаем эмулятор QEMU для кросс-платформенной сборки
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      # 3. Настраиваем Docker Buildx для использования продвинутых возможностей сборки
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # 4. Логинимся в Docker Hub для последующей публикации образа
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # 5. Собираем и публикуем Docker-образ
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./docker/backend/Dockerfile
          # Собираем образы сразу для двух популярных архитектур (Intel/AMD и ARM)
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/payment-course-backend:latest

      # 6. Сканируем опубликованный образ на известные уязвимости
      - name: Scan image for vulnerabilities
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: '${{ secrets.DOCKERHUB_USERNAME }}/payment-course-backend:latest'
          format: 'table'
          exit-code: '1' # Завершить сборку с ошибкой, если найдены уязвимости
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH' # Искать только уязвимости высокой и критической опасности