# .github/workflows/ci.yml

name: Docker CI (PR)

on:
  pull_request:
    branches:
      - 'main'

jobs:
  # SAST (Static Application Security Testing) - статический анализ безопасности.
  sast-scan:
    name: SAST Code Scan
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: typescript

      - name: Autobuild
        uses: github/codeql-action/autobuild@v3

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3

  # Задача по сборке и сканированию Docker-образа.
  build-and-scan-docker:
    name: Build & Scan Docker Image
    runs-on: ubuntu-latest
    # 'needs' означает, что эта задача начнется только после успешного завершения 'sast-scan'.
    needs: sast-scan
    permissions:
      contents: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Настраиваем окружение для сборки Docker-образов.
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Собираем Docker-образ, но не публикуем его (push: false).
      # Просто проверяем, что сборка проходит успешно.
      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./docker/backend/Dockerfile
          push: false
          # Сохраняем собранный образ в виде tar-архива для сканирования.
          outputs: type=docker,dest=/tmp/image.tar

      # Сканируем собранный образ на уязвимости с помощью Trivy.
      - name: Scan image for vulnerabilities
        uses: aquasecurity/trivy-action@master
        with:
          input: /tmp/image.tar
          format: 'table'
          # Искать уязвимости только высокого и критического уровня.
          severity: 'HIGH,CRITICAL'
          # Игнорировать уязвимости, для которых еще нет исправления.
          ignore-unfixed: true
          # Завершить CI с ошибкой (код 1), если найдены уязвимости.
          exit-code: '1'